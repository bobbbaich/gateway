name: "Deploy to ECS"
description: "Builds and deploys the React frontend to AWS S3"
inputs:
  aws-access-key-id:
    required: true
    description: "The aws-access-key-id used to authenticate with AWS"
  aws-secret-access-key:
    required: true
    description: "The aws-secret-access-key used to authenticate with AWS"

outputs:
  ecr-image:
    description: "Built image URL"
    value: ${{ steps.build-image.outputs.ecr-image }}

runs:
  using: "composite"
  steps:
    - uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
        cache: 'maven'
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ env.AWS_REGION }}
        mask-aws-account-id: false

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        echo "Build, tag, and push image to Amazon ECR"
        ECR_IMAGE_URL="$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        mvn clean spring-boot:build-image -Dspring-boot.build-image.imageName=$ECR_IMAGE_URL -DskipTests
        docker push $ECR_IMAGE_URL
        echo "::set-output name=ecr-image::$(echo $ECR_IMAGE_URL)"
      shell: bash